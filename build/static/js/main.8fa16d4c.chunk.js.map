{"version":3,"sources":["components/Process.js","components/Single.js","components/Posts.js","components/Head.js","components/Page.js","components/Sidebar.js","components/nav.js","components/Post-List.js","components/Paginate.js","components/Footer.js","components/Homepage.js","components/404.js","serviceWorker.js","App.js","index.js"],"names":["Process","post_type","endpoint","rand","postType","apiEndpoint","catSet","tagSet","pageNum","year","year2","nextYear","nextMonth","month","apiUrl","global","Configs","Number","toString","monthIncrement","console","log","useState","getTheContent","setData","useEffect","document","getElementById","style","opacity","display","a","async","fetch","categoryData","json","map","cat","slug","id","tagsData","tag","apiData","theData","pages","headers","get","data","length","querySelector","classList","add","window","scrollTo","getPage","withRouter","props","title","singleContent","html","rendered","Col","md","lg","xl","className","Head","onClick","e","closestA","target","closest","getAttribute","getHref","preventDefault","finalHref","split","replace","reactUrl","open","history","push","dangerouslySetInnerHTML","__html","content_shortcode","Posts","match","singlePost","Math","random","params","post","c","toUpperCase","blogPage","companyTitle","Row","Sidebar","minHeight","currentPage","theContent","pageContent","hasAttribute","widgetContent","setContent","content","widgets","getWidgets","apiDomain","i","sidebarItem","key","defaultActiveKey","links","linkItem","handleClick","to","url","label","href","rel","Navibar","brandImg","menu","setMenu","bloginfo","setInfo","expanded","setExpanded","logo","brandingLogo","navbarClasses","response","navItems","getMenu","info","getInfo","frontPage","Bloginfo","alt","src","height","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","navItem","ID","PostList","fimg","postDate","defaultThumb","listContent","apiString","fimg_url","Date","date","toDateString","Body","Img","variant","Title","Subtitle","Text","txt","createElement","innerHTML","value","decodeHTML","excerpt","link","Paginate","active","items","number","Footer","footerContent","setFooter","footer","getFooter","reactLink","footerClasses","j","footerItem","role","data-rb-event-key","aria-selected","name","companyDesc","facebookUrl","twitterUrl","snapchatUrl","instagramUrl","copyright","color","Homepage","FourOFour","backgroundImg","fofBackground","fontSize","Boolean","location","hostname","unregister","navigator","serviceWorker","ready","then","registration","App","path","exact","component","Page","ReactDOM","render","Spinner","animation"],"mappings":"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","file":"static/js/main.8fa16d4c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nfunction Process(post_type, endpoint, rand) {\r\n\r\n    let postType;\r\n    let apiEndpoint;\r\n    let catSet;\r\n    let tagSet;\r\n    let pageNum;\r\n    let year;\r\n    let year2; \r\n    let nextYear;\r\n    let nextMonth;\r\n    let month;\r\n    const apiUrl = global.Configs.apiUrl;\r\n\r\n    // build the api endpoint based on the post type\r\n    switch (post_type) {\r\n        case 'page':\r\n            postType = post_type + 's';\r\n            apiEndpoint = `?slug=` + endpoint;\r\n            break;\r\n        case 'post':\r\n            postType = post_type + 's';\r\n            apiEndpoint = endpoint;\r\n            break;\r\n        case 'category':\r\n            postType = 'posts';\r\n            catSet = true;\r\n            pageNum = '&page=' + endpoint[1];\r\n            // apiEndpoint is set in if(catSet)\r\n            break;\r\n        case 'tag':\r\n            postType = 'posts';\r\n            tagSet = true;\r\n            // apiEndpoint is set in if(tagSet)\r\n            break;\r\n        case 'archive':\r\n            postType = 'posts';\r\n            year = endpoint['year'];\r\n            year2 = endpoint['year'];\r\n            month = endpoint['month'];\r\n            monthIncrement(month);\r\n            apiEndpoint = `?after=${year}-${month}-01T00:00:00&before=${year2 + nextYear}-${nextMonth}-01T00:00:00`;\r\n            console.log()\r\n            break;\r\n        case 'footer':\r\n            postType = post_type;\r\n            apiEndpoint = endpoint; \r\n            break;\r\n        default:\r\n            console.log('default');\r\n            break;\r\n    }\r\n\r\n    const [getTheContent, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"footer_dark\").style.opacity = \"0\"\r\n        document.getElementById('spinner').style.display = 'block';\r\n        //didn't like the flash when content changed...\r\n        \r\n       \r\n        async function getPage() {\r\n            /*****************************************************************************************************\r\n             ************These endpoints require more info...this is to preserve pretty urls**********************\r\n             *****************************************************************************************************/\r\n            // get the category id from WP API and set apiEndpoint\r\n            if (catSet) {\r\n                const categoryData = await fetch(`${apiUrl}/categories/`);\r\n                const categoryDataContent = await categoryData.json();\r\n\r\n                categoryDataContent.map(cat => {\r\n                    if (cat.slug === endpoint[0]) {\r\n                        // eslint-disable-next-line\r\n                        return (apiEndpoint = `?categories=` + cat.id + pageNum);\r\n                    } else return ('');\r\n                });\r\n            }\r\n            // get the tag id from WP API and set apiEndpoint       \r\n            if (tagSet) {\r\n                const tagsData = await fetch(`${apiUrl}/tags/`);\r\n                const tagsDataContent = await tagsData.json();\r\n\r\n                tagsDataContent.map(tag => {\r\n                    if (tag.slug === endpoint) {\r\n                        // eslint-disable-next-line\r\n                        return (apiEndpoint = `?tags=` + tag.id);\r\n                    } else { return (''); }\r\n                });\r\n            }\r\n            /*****************************************************************************************************\r\n             **********************Finally! the actual call to the WordPress REST API*****************************\r\n             *****************************************************************************************************/\r\n            // fetch data from WordPress API\r\n            const apiData = await fetch(`${apiUrl}/${postType}/${apiEndpoint}`);\r\n            const theData = await apiData.json();\r\n            \r\n            // getnumber of pages from api response header to use in pagination\r\n            global.pages = apiData.headers.get('X-WP-TotalPages');\r\n\r\n            // check if wp-api returned the data we requested\r\n            // failed call will either return empty or with a data object\r\n            if (theData.data) { setData(false); }\r\n            else if (theData.length === 0) { setData(false); }\r\n            else { setData(theData); }\r\n\r\n            document.getElementById('spinner').style.display = 'none';\r\n            document.getElementById('footer_dark').style.opacity = '1';\r\n            \r\n            //add bootstrap class to Gutenberg Form elements\r\n            if(document.querySelector(\"form\")) {\r\n                document.querySelector(\"input[aria-label='Name']\").classList.add(\"form-control\");\r\n                document.querySelector(\"input[type='Email']\").classList.add(\"form-control\");\r\n                document.querySelector(\"textarea[aria-label='Message']\").classList.add(\"form-control\");\r\n                document.querySelector(\"input[aria-label='Website']\").classList.add(\"form-control\");\r\n                document.querySelector(\"button[name='submit']\").classList.add(\"btn\");\r\n            }\r\n            window.scrollTo(0, 0);\r\n        }\r\n        getPage();\r\n    }, [rand])\r\n\r\n    return getTheContent;\r\n\r\n    // function to determine the number of the next month for returning a specific month's 'Archive' list.\r\n    function monthIncrement(month) {\r\n        if (month === '12') { nextMonth = '01'; year2 = ''; nextYear = Number(year) + 1 }\r\n        else if (month <= 8) { nextMonth = '0' + (Number(month) + 1).toString(); nextYear = ''; } \r\n        else { nextMonth = Number(month) + 1; nextYear = ''; }\r\n    }\r\n\r\n}\r\n\r\nexport default Process;","import React from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Process from './Process'\r\nimport Head from './Head' \r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst Single = (props) => {\r\n\r\n    let postType = props.postType;\r\n    let endpoint = props.endpoint;\r\n    let rand = props.rand;\r\n    let title;\r\n\r\n    const theContent = Process(postType, endpoint, rand);\r\n    const singleContent = theContent;\r\n    if (singleContent) {\r\n        title = singleContent.map(html => (html.title.rendered))\r\n    }\r\n\r\n    if (singleContent) {\r\n        return (\r\n            <Col md={9} lg={9} xl={9} className=\"single-post\">\r\n                <Head title={title} />\r\n                <h1>{title}</h1>\r\n                <div onClick={handleClick} dangerouslySetInnerHTML={createHTML()} className='wp-html' />\r\n            </Col>\r\n        );\r\n    }\r\n    else { return (<div className=\"wp-html\"><h1>404 Not Found</h1></div>) }\r\n\r\n    // Functions //////////////////////////////////////////////////////////////////////\r\n    function createHTML() {\r\n        return { __html: singleContent.map(html => (html.content_shortcode)) };\r\n    }\r\n\r\n    function handleClick(e) {\r\n        let closestA = e.target.closest('a')\r\n        if (closestA === null) {return}\r\n        if (closestA.getAttribute(\"target\") === '_blank') {\r\n            let getHref = closestA + ' '\r\n            if (!getHref) return\r\n            e.preventDefault()\r\n            let resHref = getHref.split(/href=\"(.*?...)\"/)\r\n            let finalHref = resHref[0].replace(window.Configs.reactUrl, '').replace(':3000', '')\r\n            window.open(finalHref,'_blank');\r\n        }\r\n        else {\r\n            let getHref = closestA + ' ';\r\n            if (!getHref) return;\r\n            e.preventDefault();\r\n            let resHref = getHref.split(/href=\"(.*?...)\"/);\r\n            let finalHref = resHref[0].replace(window.Configs.reactUrl, '').replace(':3000', '')\r\n            props.history.push(finalHref)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Single);","import React from 'react';\r\nimport Sidebar from './Sidebar'\r\nimport PostList from './Post-List'\r\nimport Single from './Single'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col' \r\n\r\n\r\nconst Posts = ({ props, match }) => {\r\n\r\n    let postType = \"\";\r\n    let endpoint = \"\";\r\n    let singlePost = \"\"; \r\n    let pageNum = \"\";\r\n    let title = \"\";\r\n    const rand = Math.random();\r\n\r\n    if (match) {\r\n        endpoint = match.params.id;\r\n        singlePost = match.params.post;\r\n        pageNum = match.params.pageNum;\r\n        // check the post type so we can set the correct endpoint\r\n        if (match.params.year) {\r\n            postType = 'archive';\r\n            endpoint = { year: match.params.year, month: match.params.month };\r\n            title = 'Archive: | ' +match.params.month +'/' + match.params.year;\r\n        } else if (match.params.tag) {\r\n            postType = 'tag';\r\n            endpoint = match.params.tag;\r\n            title = match.params.tag.replace(/^\\w/, c => c.toUpperCase());\r\n        } else if (match.params.post) {\r\n            postType = 'post';\r\n            endpoint = `?slug=` + match.params.id;\r\n        } else if (match.params.pageNum) {\r\n            postType = 'category';\r\n            endpoint = [match.params.title, match.params.pageNum];\r\n            title = match.params.title.replace(/^\\w/, c => c.toUpperCase());\r\n        } else if(match.params.blogPage) {\r\n            postType = 'post';\r\n            endpoint = ['/?page=' + match.params.blogPage];\r\n            pageNum = match.params.blogPage;\r\n            title = window.Configs.companyTitle;\r\n        } else {\r\n            postType = 'category';\r\n            endpoint = [match.params.title, '1'];\r\n            title = match.params.title.replace(/^\\w/, c => c.toUpperCase());\r\n        }\r\n    }\r\n    // if match is not set... is site root\r\n    else {\r\n        postType = 'post';\r\n        endpoint = ['?page=1'];\r\n        pageNum = '1';\r\n        title = window.Configs.companyTitle;\r\n    }\r\n\r\n\r\n    if (singlePost) {\r\n        return (\r\n            <div className=\"category-wrapper close-nav\">\r\n                <Row>\r\n                    <Col md={3} lg={3} xl={3} className=\"sidebar-container\"><Sidebar /></Col>\r\n                    <Single postType={postType} endpoint={endpoint} rand={rand} />\r\n                </Row>\r\n\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"category-wrapper close-nav\" style={{ minHeight: '100vh' }}>\r\n                <Row>\r\n                    <Col md={3} lg={3} xl={3} className=\"sidebar-container\"><Sidebar /></Col>\r\n                    <PostList postType={postType} endpoint={endpoint} rand={rand} currentPage={pageNum} title={title} />\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Posts;","import React from 'react'\nimport Helmet from 'react-helmet'\n\n\nconst Head = (props) => {\n\n    return (\n        <Helmet>\n            <title>{props.title + ' | ' + global.Configs.companyTitle}</title>\n        </Helmet>\n    )\n}\n\nexport default Head","import React from 'react'\r\nimport Process from './Process'\r\nimport Head from './Head'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst Page = (props) => {\r\n\r\n    const postType = 'page';\r\n    let endpoint\r\n    let theContent\r\n    let pageContent\r\n\r\n\r\n    // Check if referrer is <Homepage/> or <Route/>\r\n    if (props.id) {\r\n        endpoint = props.id\r\n        theContent = Process(postType, endpoint, props.id)\r\n        pageContent = theContent\r\n    }\r\n    else if (props.match) {\r\n        endpoint = props.match.params.id\r\n        theContent = Process(postType, endpoint, props.match)\r\n        pageContent = theContent\r\n    }\r\n\r\n    // If Process.js returns data\r\n    if (pageContent) {\r\n        const title = pageContent.map(html => (html.title.rendered))\r\n\r\n        return (\r\n            <div id=\"single\" className=\"page-wrapper\" style={{ minHeight: '100vh' }}>\r\n                <Head title={title} />\r\n                <div className=\"wp-page-html\" >\r\n                    <div onClick={handleClick} dangerouslySetInnerHTML={createMarkup()} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    // return 404 for requests reffered by <Route/>\r\n    else if (props.match) {\r\n        return (\r\n            <div className=\"page-wrapper wp-page-html\">\r\n                <h1>404 Not Found</h1>\r\n            </div>)\r\n    }\r\n    // return blank for everything else...\r\n    else {\r\n        return (\r\n            <div className=\"page-wrapper\" style={{ minHeight: '101vh' }}></div>\r\n        );\r\n    }\r\n\r\n    // Functions //////////////////////////////////////////////////////////////////////\r\n    function createMarkup() {\r\n        return { __html: pageContent.map(html => (html.content_shortcode)) };\r\n    }\r\n\r\n    function handleClick(e) {\r\n        let closestA = e.target.closest('a')\r\n        if (closestA === null) { return }\r\n        if (closestA.hasAttribute('data-toggle')) { return }\r\n        if (closestA.getAttribute(\"target\") === '_blank') {\r\n            let getHref = closestA + ' '\r\n            if (!getHref) return\r\n            e.preventDefault()\r\n            let resHref = getHref.split(/href=\"(.*?...)\"/)\r\n            let finalHref = resHref[0].replace(window.Configs.reactUrl, '').replace(':3000', '')\r\n            window.open(finalHref, '_blank');\r\n        }\r\n        else {\r\n            let getHref = closestA + ' ';\r\n            if (!getHref) return;\r\n            e.preventDefault();\r\n            let resHref = getHref.split(/href=\"(.*?...)\"/);\r\n            let finalHref = resHref[0].replace(window.Configs.reactUrl, '').replace(':3000', '')\r\n            props.history.push(finalHref)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Page);","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const [widgetContent, setContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getWidgets() {\r\n      const content = await fetch(`${global.Configs.apiUrl}/sidebar/json`);\r\n      const widgets = await content.json();\r\n      setContent(widgets);\r\n    }\r\n    getWidgets();\r\n  }, []);\r\n\r\n    const apiDomain = global.Configs.apiDomain;\r\n    const reactUrl = global.Configs.reactUrl;\r\n    let reactLink\r\n    let i = 0;\r\n\r\n    return (\r\n        <div id=\"sidebar\" className=\"sidebar\">\r\n            {widgetContent.map(sidebarItem => {\r\n                i++;\r\n                return (\r\n                    <Nav key={i} defaultActiveKey=\"/home\" className=\"flex-column widget-container\">\r\n                        <label className=\"sidebar-title\">{sidebarItem.title}</label>\r\n                        {sidebarItem.links.map(linkItem => {\r\n                            if (linkItem.html) {\r\n                                function createMarkup() { return { __html: linkItem.html } }\r\n                                return (\r\n                                    <div key={Math.random()} onClick={handleClick} dangerouslySetInnerHTML={createMarkup()} />\r\n                                );\r\n                            } else {\r\n                                const linkTo = () => { return (linkItem.url.replace(apiDomain, '').replace(reactUrl, '')) }\r\n                                // check if is react-link or _blank for footer display:none\r\n                                if (linkItem.target === '_blank') { reactLink = '' } else { reactLink = ' react-link' }\r\n                                if (reactLink) {\r\n                                    return (\r\n                                        <Link key={Math.random()} to={linkTo} className=\"navbar-left nav-link react-link\">{linkItem.label}</Link>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <a key={Math.random()} href={linkItem.url} className=\"navbar-left nav-link\" rel=\"noopener noreferrer\" target=\"_blank\">{linkItem.label}</a>\r\n                                    );\r\n                                }\r\n                            }\r\n                        })}\r\n                    </Nav>\r\n                );\r\n            })}\r\n\r\n        </div >\r\n    );\r\n\r\n    // Functions //////////////////////////////////////////////////////////////////////\r\n\r\n    function handleClick(e) {\r\n        let closestA = e.target.closest('a')\r\n        if (closestA === null) { return }\r\n        if (closestA.getAttribute(\"target\") === '_blank') {\r\n            let getHref = closestA + ' '\r\n            if (!getHref) return\r\n            e.preventDefault()\r\n            let resHref = getHref.split(/href=\"(.*?...)\"/)\r\n            let finalHref = resHref[0].replace(window.Configs.reactUrl, '').replace(':3000', '')\r\n            window.open(finalHref, '_blank');\r\n        }\r\n        else {\r\n            let getHref = closestA + ' ';\r\n            if (!getHref) return;\r\n            e.preventDefault();\r\n            let resHref = getHref.split(/href=\"(.*?...)\"/);\r\n            let finalHref = resHref[0].replace(window.Configs.reactUrl, '').replace(':3000', '')\r\n            props.history.push(finalHref)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Sidebar);","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst Navibar = (props) => {\r\n\r\n    const [menu, setMenu] = useState([]);\r\n    const [bloginfo, setInfo] = useState([]);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const apiUrl = global.Configs.apiUrl;\r\n    const apiDomain = global.Configs.apiDomain;\r\n    const reactUrl = global.Configs.reactUrl;\r\n    const logo = global.Configs.brandingLogo\r\n    let brandImg\r\n    const companyTitle = global.Configs.companyTitle\r\n    const navbarClasses = global.Configs.navbarClasses\r\n\r\n    useEffect(() => {\r\n        async function getMenu() {\r\n            const response = await fetch(`${apiUrl}/menu.json`);\r\n            const navItems = await response.json();\r\n            setMenu(navItems);\r\n        }\r\n        getMenu();\r\n    }, [apiUrl]);\r\n\r\n    useEffect(() => {\r\n        async function getInfo() {\r\n            const info = await fetch(`${global.Configs.apiUrl}/bloginfo`);\r\n            const bloginfo = await info.json();\r\n            setInfo(bloginfo);\r\n        }\r\n        getInfo();\r\n    }, []);\r\n\r\n    global.frontPage = bloginfo[2]\r\n    global.Bloginfo = bloginfo\r\n\r\n    if(logo) {\r\n        brandImg = <img alt={companyTitle} src={logo} height=\"32\" className=\"d-inline-block align-top\" />\r\n    } else { brandImg = ''}\r\n\r\n    return (\r\n        <Navbar expanded={expanded} collapseOnSelect expand=\"lg\" className={navbarClasses} >\r\n            <Navbar.Brand href=\"#home\">\r\n                {brandImg}\r\n                <div className=\"bloginfo\"><span className=\"blog-title\">{bloginfo[0]}</span><br /><span className=\"blog-description\">{bloginfo[1]}</span></div>\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle id=\"navbar-toggler\" onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls=\"responsive-navbar-nav\" className=\"navbar-toggle\" style={{ display: 'none' }} />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    {menu.map(navItem => {\r\n                        const linkTo = () => { return (navItem.url.replace(apiDomain, '').replace(reactUrl, '')) }\r\n                        return (\r\n                            <Link key={navItem.ID} onClick={() => setExpanded(false)} to={linkTo} className=\"navbar-right nav-link react-link\">{navItem.title}</Link>);\r\n                    })}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n    );\r\n}\r\n\r\nexport default Navibar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Process from './Process'\r\nimport Paginate from './Paginate'\r\nimport Head from './Head' \r\n\r\n\r\nfunction PostList(props) {\r\n\r\n    let fimg;\r\n    let postDate;\r\n    let postType = props.postType;\r\n    let endpoint = props.endpoint;\r\n    let rand = props.rand;\r\n    const apiDomain = global.Configs.apiDomain;\r\n    const reactUrl = global.Configs.reactUrl;\r\n    const defaultThumb = global.Configs.defaultThumb\r\n\r\n    const theContent = Process(postType, endpoint, rand);\r\n    const listContent = theContent;\r\n\r\n    const decodeHTML = function (html) {\r\n        let txt = document.createElement('textarea');\r\n        txt.innerHTML = html;\r\n        return txt.value;\r\n    };\r\n\r\n    const title = props.title;\r\n\r\n    if (listContent) {\r\n        return (\r\n            <Col id=\"post-list\" className=\"main-content\" md={9} lg={9} xl={9}>\r\n             <Head title={title} />\r\n                {listContent.map(apiString => {\r\n                    if (apiString.fimg_url) { fimg = apiString.fimg_url } else { fimg = defaultThumb }\r\n                    postDate = new Date(apiString.date).toDateString();\r\n                    return (\r\n                        <Card key={apiString.id}>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={4} className=\"post-list-img\"><Card.Img variant=\"left\" src={fimg} /></Col>\r\n                                    <Col md={8}>\r\n                                        <Card.Title>{apiString.title.rendered}</Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\">{postDate}</Card.Subtitle>\r\n                                        <Card.Text>{decodeHTML(apiString.excerpt.rendered)}</Card.Text>\r\n                                        <Link to={apiString.link.replace(apiDomain, '').replace(reactUrl, '')} className=\"react-link\" >View Article</Link>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    );\r\n                })}\r\n                <Paginate currentPage={props.currentPage} />\r\n            </Col>\r\n        )\r\n    }\r\n    else { return (<div className=\"page-wrapper wp-html\"><h1>404 Not Found</h1></div>) }\r\n}\r\n\r\nexport default PostList;","import React  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from 'react-bootstrap/Pagination' \r\n\r\nconst Paginate = (props) => {\r\n\r\n    let active;\r\n    let currentPage = props.currentPage;\r\n    //check if current page is set and give it a default\r\n    if (!currentPage) { currentPage = '1'; }\r\n    // loop through number of pages and create buttons\r\n    let items = [];\r\n    for (let number = 1; number <= global.pages; number++) {\r\n        if (number === Number(currentPage)) { active = 'active'; }\r\n        else { active = '' }\r\n        items.push(\r\n            <li key={number} className={\"page-item \" + active}>\r\n                <Link to={\"page=\" + number} className=\"page-link\" onClick={window.scrollTo(0, 0)}>{number}</Link>\r\n            </li>,\r\n        );\r\n    }\r\n    \r\n    if (global.pages > 1) {\r\n        return (\r\n            <Pagination>{items}</Pagination>\r\n        );\r\n    } else return ('');\r\n}\r\n\r\nexport default Paginate;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Footer = (props) => {\r\n\r\n    const [footerContent, setFooter] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getFooter() {\r\n            const content = await fetch(`${global.Configs.apiUrl}/footer`);\r\n            const footer = await content.json();\r\n            setFooter(footer);\r\n        }\r\n        getFooter();\r\n    }, []);\r\n\r\n    const apiDomain = global.Configs.apiDomain\r\n    const reactUrl = global.Configs.reactUrl\r\n    const footerClasses = global.Configs.footerClasses\r\n    let reactLink\r\n    let i = 0;\r\n    let j = 0;\r\n\r\n    return (\r\n        <div id=\"footer_dark\" className={footerClasses} style={{ display: 'none' }}>\r\n            <footer>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {footerContent.map(footerItem => {\r\n                            i++;\r\n                            return (\r\n                                <div key={footerItem.title + i} className=\"col-sm-6 col-md-3 item footer-menu-container\">\r\n                                    <h3 className=\"footer-title\">{footerItem.title}</h3>\r\n                                    <ul>\r\n                                        {footerItem.links.map(linkItem => {\r\n                                            j++;\r\n                                            const linkTo = () => { return (linkItem.url.replace(apiDomain, '').replace(reactUrl, '')) }\r\n                                            // check if is react-link or _blank for footer display:none\r\n                                            if (linkItem.target === '_blank') { reactLink = '' } else { reactLink = ' react-link' }\r\n                                            if (reactLink) {\r\n                                                return (\r\n                                                    <li key={2354 + j}><Link to={linkTo} role=\"tab\" data-rb-event-key=\"1\" aria-selected=\"true\" className={\"navbar-footer nav-link\" + reactLink} target={linkItem.target}>{linkItem.label}<ion-icon name=\"open-outline\"></ion-icon></Link></li>\r\n                                                );\r\n                                            } else {\r\n                                                return (\r\n                                                    <li key={2354 + j}><a href={linkItem.url} role=\"tab\" data-rb-event-key=\"1\" aria-selected=\"true\" className={\"navbar-footer nav-link\" + reactLink} rel=\"noopener noreferrer\" target={linkItem.target}>{linkItem.label}<ion-icon name=\"open-outline\"></ion-icon></a></li>\r\n                                                );\r\n                                            }\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        <div className=\"col-md-6 item text company-info\">\r\n                            <h3>{global.Configs.companyTitle}</h3>\r\n                            <p>{global.Configs.companyDesc}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col item social\">\r\n                                <a href={global.Configs.facebookUrl} target=\"blank\"><i className=\"icon ion-social-facebook\"></i></a>\r\n                                <a href={global.Configs.twitterUrl}><i className=\"icon ion-social-twitter\"></i></a>\r\n                                <a href={global.Configs.snapchatUrl}><i className=\"icon ion-social-snapchat\"></i></a>\r\n                                <a href={global.Configs.instagramUrl}><i className=\"icon ion-social-instagram\"></i></a>\r\n                            </div>\r\n                    <p className=\"copyright\">{global.Configs.copyright}  | Powered by <a href=\"http://simplereactwordpress.com\" style={{color:'#fff'}}>Simple React WordPress®</a></p>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Page from './Page'\r\nimport Posts from './Posts' \r\n\r\nconst Homepage = () => {\r\n\r\n    if (global.Configs.frontPage === 'blog/') {\r\n        return (\r\n            <Posts />\r\n        );\r\n    } else {\r\n        return (\r\n            <Page id={global.Configs.frontPage} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\nimport Process from './Process'\n\n\nconst FourOFour = () => {\n\n  const backgroundImg = global.Configs.fofBackground\n  // eslint-disable-next-line\n  let process = Process()\n  \n  return (\n    <div className=\"react-fof-wrapper\" \n    style={{ \n      minHeight: '100vh',\n      'backgroundImage': `url(${backgroundImg})`,\n      }}>\n    <div id=\"four-o-four\">\n      <h2 style={{ fontSize: '5em' }}>404</h2>\n      <p>Page not found</p>\n    </div>\n    </div>\n  )\n}\n\nexport default FourOFour;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  global.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    global.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    global.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, global.location.href);\n    if (publicUrl.origin !== global.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    global.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            global.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Navibar from './components/nav';\nimport Posts from './components/Posts'\nimport Page from './components/Page'\nimport Footer from './components/Footer'\nimport Homepage from './components/Homepage'\nimport FourOFour from './components/404'\n\n\nfunction App() {\n\n  return (\n    <div className=\"app-wrapper\" style={{ minHeight: '100vh' }}>\n      <Navibar />\n      <Switch>\n        <Route path=\"/category/:title\" exact component={Posts} />\n        <Route path=\"/category/:title/page=:pageNum\" exact component={Posts} />\n        <Route path=\"/tag/:tag\" exact component={Posts} />\n        <Route path=\"/archive/:year/:month\" exact component={Posts} />\n        <Route path=\"/:post/:id/\" exact component={Posts} />\n        <Route path=\"/page=:blogPage\" exact component={Posts} />\n        <Route path=\"/:id/\" exact component={Page} />\n        <Route path=\"/\" exact component={Homepage} />\n        <Route component={FourOFour} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Spinner from 'react-bootstrap/Spinner'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n    <div id=\"spinner-container\" className=\"spinner-div\">\n        <Spinner animation=\"border\" variant=\"primary\" />\n    </div>\n    , document.getElementById('spinner'));\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}